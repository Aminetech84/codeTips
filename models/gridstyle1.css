/* css way to create variables
to change it, rewrite it
a {
  //usage
  color: var(--text-color);
}
:root {
  --text-color: red;
}*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Grid container *parent element* */
.parent {
  display: grid;
  /* Optional properties for grid container*/
  /*
  display: grid;
      grid-template-columns: ;
      grid-template-rows: ;
      grid-gap: ;
      grid-auto-rows: ;
      grid-auto-columns: ;
      grid-template-areas: ;
      justify-content: ;
      align-items: ;
      */
}

.child {
  /* Optional properties for grid item *child of grid* */
  /*
    grid-column: ;
    grid-row: ;
    grid-area: ;
    align-self: ;
    justify-self: ;
    */
  display: grid;
}

div {
  border: 0.2ch solid #ee4785;
}

.container {
  background: #000;
  color: #fff;
  width: 100%;
  min-height: 100vh;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  /* grid-template-areas: 
   'header header header'
   'nav main sidebar'
   'nav footer';*/
}
.container .a {
  display: flex;
  justify-content: center;
  align-items: center;
}
.container .a:nth-child(1) {
  /* spread a column to go over more columns
  // same way with 
  grid-row-start: ;
  grid-row-end: ;
  grid-row: ;
  ****************
  grid-column-start: 1;
  grid-column-end: 4; // number should be bigger than 2
  grid-column: 1 / 3; //shorter way*/
}/*# sourceMappingURL=gridstyle1.css.map */